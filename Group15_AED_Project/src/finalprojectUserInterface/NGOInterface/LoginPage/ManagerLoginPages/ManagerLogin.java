/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package finalprojectUserInterface.NGOInterface.LoginPage.ManagerLoginPages;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

import finalprojectBackend.DB4OUtility.DB4OUtility;
import finalprojectBackend.OperatingSystem.OperatingSystem;
import finalprojectBackend.Enterprise.NGO.Manager;
import finalprojectBackend.Enterprise.NGO.NGOClass;
import finalprojectBackend.Organization.AssignmentDonation;
import finalprojectUserInterface.MainJFrameForm;


/**
 *
 * @author shreyas purkar
 */
public class ManagerLogin extends javax.swing.JPanel {

    /**
     * Creates new form ManagerLogin
     */
    MainJFrameForm MainLoginPage;
    private OperatingSystem operatingSystem;
    private DB4OUtility dB4OUtility;
    Manager manager;
    String org;

    public ManagerLogin(MainJFrameForm MainLPage, DB4OUtility dB4OUtility, OperatingSystem operatingSystem, Manager d) {
        initComponents();
        this.MainLoginPage = MainLPage;
        this.dB4OUtility = dB4OUtility;
        this.operatingSystem = operatingSystem;
        this.manager = d;
        for (NGOClass n : operatingSystem.getNGODirectory().getListOfNGO()) {
            if (n.getNameEnterprise().equals(d.getNGOName())) {
                org = n.getNameEnterprise();
            }
        }
        populateTable(manager.getpName());
//        populateRecieverTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tab1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        searchbtn = new javax.swing.JButton();
        searchname_txt = new javax.swing.JTextField();
        logbtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_2 = new javax.swing.JTable();
        name_lbl = new javax.swing.JLabel();
        status_lbl = new javax.swing.JLabel();
        addstatusbtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        statustxt = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cat_txt = new javax.swing.JComboBox<>();
        catButton = new javax.swing.JButton();

        tab1.setBackground(new java.awt.Color(255, 204, 51));

        jPanel3.setBackground(new java.awt.Color(94, 80, 63));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchbtn.setBackground(new java.awt.Color(102, 102, 102));
        searchbtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchbtn.setText("Search");
        searchbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });
        jPanel3.add(searchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, 80, 20));

        searchname_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchname_txtActionPerformed(evt);
            }
        });
        jPanel3.add(searchname_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 248, -1));

        logbtn.setBackground(new java.awt.Color(255, 204, 51));
        logbtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        logbtn.setText("Logout");
        logbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logbtnActionPerformed(evt);
            }
        });
        jPanel3.add(logbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 10, 80, 30));

        table_2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Category", "Weight (LB)", "Donor Name", "Donor Enterprise", "Donor Enterprise Address", "Receiver Enterprise", "Receiver Enterprise Address", "Status", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(table_2);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 1160, 520));

        name_lbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        name_lbl.setForeground(new java.awt.Color(255, 255, 255));
        name_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name_lbl.setText("Search by Name:");
        jPanel3.add(name_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 110, 20));

        status_lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        status_lbl.setForeground(new java.awt.Color(255, 255, 255));
        status_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        status_lbl.setText("Status:");
        jPanel3.add(status_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 660, 70, 30));

        addstatusbtn.setBackground(new java.awt.Color(102, 102, 102));
        addstatusbtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        addstatusbtn.setText("Add Status");
        addstatusbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addstatusbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addstatusbtnActionPerformed(evt);
            }
        });
        jPanel3.add(addstatusbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 660, 90, 30));
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-15, -34, -1, -1));

        statustxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Recycled", "Rejected" }));
        jPanel3.add(statustxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 660, 230, 30));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Category:");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 720, 70, -1));

        cat_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plastic", "Paper", "Electronics", "Metal" }));
        cat_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cat_txtActionPerformed(evt);
            }
        });
        jPanel3.add(cat_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 713, 230, 30));

        catButton.setBackground(new java.awt.Color(102, 102, 102));
        catButton.setText("Set");
        catButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        catButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catButtonActionPerformed(evt);
            }
        });
        jPanel3.add(catButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 720, 90, -1));

        tab1.addTab("Donation History", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tab1, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab1, javax.swing.GroupLayout.PREFERRED_SIZE, 794, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        // TODO add your handling code here:
        populateTableName(manager.getpName(), searchname_txt.getText());
    }//GEN-LAST:event_searchbtnActionPerformed

    private void logbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logbtnActionPerformed
        // TODO add your handling code here:
        MainJFrameForm suc = new MainJFrameForm();
        ((JFrame) SwingUtilities.getWindowAncestor(this)).dispose();
        suc.setVisible(true);
    }//GEN-LAST:event_logbtnActionPerformed

    private void addstatusbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addstatusbtnActionPerformed
        // TODO add your handling code here:
    int selectedRow = table_2.getSelectedRow();
 
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to add status");
            return;
        }
 
        DefaultTableModel model = (DefaultTableModel) table_2.getModel();
        String id = model.getValueAt(selectedRow, 9).toString();
        //System.out.println("column count " + selectedRow);
 
        for (AssignmentDonation c : operatingSystem.getAssignmentDonationList()) {
            try {
                    if (c.getUserId().equals(id)) {
                        if (c.getCategory().contentEquals("Plastic") || c.getCategory().contentEquals("Paper") || c.getCategory().contentEquals("Electronics") || c.getCategory().contentEquals("Metal")){
                    c.setStatusDonation(statustxt.getSelectedItem().toString());
                    } else {
                    JOptionPane.showMessageDialog(this, "Set item category");
                    return;
                }
                }
            } catch (Exception e) {
 
            }
        }
 
        dB4OUtility.storeSystem(operatingSystem);
        populateTable(manager.getpName());
    }//GEN-LAST:event_addstatusbtnActionPerformed

    private void searchname_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchname_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchname_txtActionPerformed

    private void cat_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cat_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cat_txtActionPerformed

    private void catButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = table_2.getSelectedRow();
 
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to add status");
            return;
        }
 
        DefaultTableModel model = (DefaultTableModel) table_2.getModel();
        String id = model.getValueAt(selectedRow, 9).toString();
        //System.out.println("column count " + selectedRow);
 
        for (AssignmentDonation c : operatingSystem.getAssignmentDonationList()) {
            try {
                if (c.getUserId().equals(id)) {
                    c.setCategory(cat_txt.getSelectedItem().toString());
                }
            } catch (Exception e) {
 
            }
        }
 
        dB4OUtility.storeSystem(operatingSystem);
        populateTable(manager.getpName());
    }//GEN-LAST:event_catButtonActionPerformed

//    private void populateRecieverTable() {
//        DefaultTableModel model = (DefaultTableModel) table_1.getModel();
//        model.setRowCount(0);
//        System.out.println("populatetable");
//        for (Recepient p : operatingSystem.getRecepientDirectory()) {
//            System.out.println("receiver " + p.getpName());
//            try {
//                if (p.getNGOName().equals(manager.getNGOName())) {
//                    Object[] row = new Object[10];
//                    row[0] = p.getNamePerson();
//                    row[1] = p.getpName();
//                    row[2] = p.getRemarks();
//                    model.addRow(row);
//                }
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
//
//        }
//
//    }
    
    private void populateTable(String name) {
        DefaultTableModel model = (DefaultTableModel) table_2.getModel();
        model.setRowCount(0);
        System.out.println("populatetable");
        for (AssignmentDonation d : operatingSystem.getAssignmentDonationList()) {
            if (d.getStatusDonation().contentEquals("Delivered for Recycling") && d.getRecManager().getNGOName().equals(org) 
                    && d.getRecManager().getpName().equals(manager.getpName())){
   
            try {
                if (d.getRecManager().getpName().matches(name)) {
                    Object[] row = new Object[11];
                    row[0] = d.getEntityName();
                row[1] = d.getCategory();
                row[2] = d.getUnits();
                try {
                    row[3] = d.getDonRecepient().getpName();
                } catch (Exception e) {

                }
                try {
                    row[4] = d.getDonEnterpriseClass().getNameEnterprise();
                } catch (Exception e) {

                }
                try {
                    row[5] = d.getDonEnterpriseClass().getAddr();
                } catch (Exception e) {

                }
                try {
                    row[6] = d.getRecEnterpriseClass().getNameEnterprise();
                } catch (Exception e) {

                }
                try {
                    row[7] = d.getRecEnterpriseClass().getAddr();
                } catch (Exception e) {

                }              
                row[8] = d.getStatusDonation();
               
                row[9] = d.getUserId();
                    

                    model.addRow(row);
                }
            } catch (Exception e) {

            }


        }
        }

    }
    
    private void populateTableName(String name, String item) {
        DefaultTableModel model = (DefaultTableModel) table_2.getModel();
        model.setRowCount(0);
        System.out.println("populatetable");
        for (AssignmentDonation d : operatingSystem.getAssignmentDonationList()) {
            if (d.getStatusDonation().contentEquals("Delivered for Recycling")) {

            if (d.getRecManager().getpName().matches(name) && d.getEntityName().contains(item)) {
                Object[] row = new Object[10];
                row[0] = d.getEntityName();
                row[1] = d.getCategory();
                row[2] = d.getUnits();
                try {
                    row[3] = d.getDonRecepient().getpName();
                } catch (Exception e) {

                }
                try {
                    row[4] = d.getDonEnterpriseClass().getNameEnterprise();
                } catch (Exception e) {

                }
                try {
                    row[5] = d.getDonEnterpriseClass().getAddr();
                } catch (Exception e) {

                }
                try {
                    row[6] = d.getRecEnterpriseClass().getNameEnterprise();
                } catch (Exception e) {

                }
                try {
                    row[7] = d.getRecEnterpriseClass().getAddr();
                } catch (Exception e) {

                }              
                row[8] = d.getStatusDonation();
               
                row[9] = d.getUserId();
                model.addRow(row);
            }

        }

    }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addstatusbtn;
    private javax.swing.JButton catButton;
    private javax.swing.JComboBox<String> cat_txt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton logbtn;
    private javax.swing.JLabel name_lbl;
    private javax.swing.JButton searchbtn;
    private javax.swing.JTextField searchname_txt;
    private javax.swing.JLabel status_lbl;
    private javax.swing.JComboBox<String> statustxt;
    private javax.swing.JTabbedPane tab1;
    private javax.swing.JTable table_2;
    // End of variables declaration//GEN-END:variables
}
